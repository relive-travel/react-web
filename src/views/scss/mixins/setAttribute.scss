/* component */
@mixin setAbsolute($top, $right, $bottom, $left) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin setFlex($flexDirection, $justifyContent: null, $alignItems: null) {
  display: flex;
  flex-direction: $flexDirection;
  justify-content: $justifyContent;
  align-items: $alignItems;
}

@mixin setSize(
  $width,
  $height,
  $margin: null,
  $padding: null,
  $aspectRatio: null
) {
  width: $width;
  height: $height;
  margin: $margin;
  padding: $padding;
  aspect-ratio: $aspectRatio;
}

@mixin setMinSize(
  $minWidth: null,
  $maxWidth: null,
  $minHeight: null,
  $maxHeight: null
) {
  min-width: $minWidth;
  max-width: $maxWidth;
  min-height: $minHeight;
  max-height: $maxHeight;
}

@mixin setBorder($width, $radius, $color: "", $type: null, $style: solid) {
  @if $type == "top" {
    border-top: $width $style unquote($color);
  } @else if $type == "right" {
    border-right: $width $style unquote($color);
  } @else if $type == "bottom" {
    border-bottom: $width $style unquote($color);
  } @else if $type == "left" {
    border-left: $width $style unquote($color);
  } @else {
    border: $width $style unquote($color);
  }
  border-radius: $radius;
}

@mixin setColor($color, $background: transparent) {
  color: $color;
  background-color: $background;
}

/* text */
@mixin setTextOverflow($line: 1) {
  width: 100%;
  overflow: hidden;
  @if $line == 1 {
    white-space: nowrap;
    text-overflow: ellipsis;
    &:hover {
      white-space: normal;
      word-break: break-word;
    }
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
    word-break: break-word;
    white-space: pre-line;
    &:hover {
      display: inline;
    }
  }
}

@mixin setFont($fontSize, $fontWeight: null, $fontColor: null) {
  font-size: $fontSize;
  font-weight: $fontWeight;
  color: $fontColor;
}

/* button element */
@mixin setButton($line) {
  padding: 0.25em * $line 0.875em;

  border: 2px solid;
  border-radius: 10px;
  background-color: transparent;

  transition: 0.25s ease-in-out;

  &:hover {
    cursor: pointer;
  }
}

@mixin setButtons($buttons, $width, $line: 1) {
  @include setFlex(row, space-around, center);

  > button {
    @if $line != 1 {
      @include setFlex(row, space-around, center);
    }
    @include setSize($width, null, null, null, null);
    @include setButton($line);
  }

  @each $name, $color in $buttons {
    .#{$name}-button {
      color: $color;
      border-color: $color;

      &:hover {
        color: black;
        background-color: rgba($color: $color, $alpha: 1);
      }
    }
  }
}
